name: Main Foodgram workflow

on:
  push:    
jobs:
  tests:
    runs-on: ubuntu-latest   
    steps:

      - name: Check out the code
        uses: actions/checkout@v3
      - name: Setup Python 
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install necessary dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install flake8==6.0.0
          pip install -r ./foodgram_backend/requirements.txt
      - name: Test with flake8
        run: python -m flake8 foodgram_backend
          
  build_and_push_backend_to_dockerhub:
    name: Build and push backend image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASS }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./foodgram_backend/
          push: true
          tags: mercure7/foodgram_backend:latest
  build_and_push_frontend_to_dockerhub:
    name: Build and push frontend image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Setup Docker Buildx 
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub 
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASS}}
      - name: Push to Docker Hub 
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: mercure7/foodgram_frontend:latest

  build_and_push_nginx_to_dockerhub:
    name: Push Nginx image to Docker Hub 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Setup Docker Buildx 
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub 
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASS}}
      - name: Push to Docker Hub 
        uses: docker/build-push-action@v4
        with:
          context: ./infra/
          push: true
          tags: mercure7/foodgram_gateway:latest
      
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_frontend_to_dockerhub
      - build_and_push_nginx_to_dockerhub
      - build_and_push_backend_to_dockerhub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3   

      - name: Copy docker-compose.production via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "foodgram"
          overwrite: true

      - name: Execute remote commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose -f docker-compose.production.yml stop
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml up -d 
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/
  send_message_to_telegram:
    name: Send message with deploy result to send_message_to_telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой Foodgram завершен успешно!                 
